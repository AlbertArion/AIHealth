// 本文件用于，使用JQL语法操作项目关联的uniCloud空间的数据库，方便开发调试和远程数据库管理
// 编写clientDB的js API（也支持常规js语法，比如var），可以对云数据库进行增删改查操作。不支持uniCloud-db组件写法
// 可以全部运行，也可以选中部分代码运行。点击工具栏上的运行按钮或者按下【F5】键运行代码
// 如果文档中存在多条JQL语句，只有最后一条语句生效
// 如果混写了普通js，最后一条语句需是数据库操作语句
// 此处代码运行不受DB Schema的权限控制，移植代码到实际业务中注意在schema中配好permission
// 不支持clientDB的action
// 数据库查询有最大返回条数限制，详见：https://uniapp.dcloud.net.cn/uniCloud/cf-database.html#limit
// 详细JQL语法，请参考：https://uniapp.dcloud.net.cn/uniCloud/jql.html

// 下面示例查询uni-id-users表的所有数据
// db.collection('uni-id-users').where({
// 	_id: '65ba2b11a7c432936bab7e3a',
// }).update({
// 	score: 20,
// })

// db.collection('uni-id-users').where({
// 	mobile: '18301570096',
// }).remove()
// db.collection('chatai-msg').where({
// 	uid: '65f1c4cce0ec199b18d53c81',
// }).get()
// const dbCmd = db.command
// db.collection('uni-id-users').where({
// 	_id: dbCmd.neq('65e97050213929f866b7abf9')
// }).remove()

// db.collection('uni-id-users').where({
// 	_id: '65eef42e337a9fefcc472be7',
// }).get();
// db.collection('chatai-msg').groupBy('uid, nickname').groupField(
// 	'count() as totalMsg').orderBy(
// 	'totalMsg desc').limit(20).get();
// db.collection(res, 'uni-id-users').where('res.uid === _id').field('_id').get()
db.collection('chatai-dialog').where({
	chat_type: null
}).update({
	chat_type: 1,
});